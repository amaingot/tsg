service:
  name: tsg-api
  app: tsg

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs10.x
  tracing:
    apiGateway: true
    lambda: true
  logs:
    restApi:
      level: INFO
      executionLogging: true
      fullExecutionData: true
    frameworkLambda: true
  individually: true
  memorySize: 128
  iamManagedPolicies:
    - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    - 'arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess'
  environment:
    AWS_XRAY_CONTEXT_MISSING: LOG_ERROR

functions:
  hello:
    handler: src/handler.hello
    events:
      - http:
          method: get
          path: hello
          authorizer:
            type: COGNITO_USER_POOLS
            authorizerId:
              Ref: ApiGatewayAuthorizer

resources:
  Resources:
    ApiGatewayAuthorizer:
      Type: AWS::ApiGateway::Authorizer
      Properties:
        IdentitySource: method.request.header.Authorization
        Name: CognitoUserPoolAuthorizer
        RestApiId:
          Ref: 'ApiGatewayRestApi'
        Type: COGNITO_USER_POOLS
        ProviderARNs:
          - 'Fn::Join':
              - ':'
              - - 'arn:aws:cognito-idp'
                - Ref: 'AWS::Region'
                - Ref: 'AWS::AccountId'
                - 'userpool/${file(../amplify/backend/amplify-meta.json):auth.tsgAuth.output.UserPoolId}'


custom:
  serverless-offline:
    port: 3001
  # secrets: ${ssm:/aws/reference/secretsmanager/${env:AWS_SECRET_NAME}~true}