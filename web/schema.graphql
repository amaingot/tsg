type Customer @model @searchable {
  id: ID!
  memNumber: String
  lastName: String
  firstName: String
  middleInitial: String
  email: String
  address: String
  address2: String
  city: String
  state: String
  zip: String
  homePhone: String
  cellPhone: String
  workPhone: String
  lastUpdated: AWSDateTime
  createdAt: AWSDateTime
  jobs: [Job] @connection(name: "CustomerJobs")
}


type Job @model @searchable {
  id: ID!
  name: String
  racket: String
  tension: String
  gauge: String
  recieved: AWSDateTime
  finished: AWSDateTime
  stringName: String
  lastUpdated: AWSDateTime
  createdAt: AWSDateTime
  customer: Customer @connection(name: "CustomerJobs")
  employee: Employee @connection(name: "EmployeeJobs")
}

type Employee @model
  @auth(
    rules: [
      { allow: owner, ownerField: "owner", mutations: [ update ], queries: [ get ] },
      { allow: groups, groups: [ "Admin" ], mutations: [ create, update, delete ], queries: [ get, list ]  }
    ]
  )
{
  id: ID!
  firstName: String
  lastName: String
  email: AWSEmail
  owner: String!
  jobs: [Job] @connection(name: "EmployeeJobs")
}