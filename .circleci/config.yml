version: 2.1

jobs:
  test:
    working_directory: ~/tsg
    docker:
      - image: circleci/node:10-browsers
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-root-dependencies-{{ checksum "package-lock.json" }}-{{ checksum "web/package-lock.json" }}-{{ checksum "api/package-lock.json" }}-{{ checksum "shared/package-lock.json" }}-{{ checksum "api/layer/package-lock.json" }}
            - v1-root-dependencies

      - run:
          name: Installing root dependencies
          command: npm install

      - run:
          name: Installing all dependencies
          command: npm run bootstrap --hoist

      - run:
          name: Run front end web tests
          command: npm run test-web

      - save_cache:
          paths:
            - node_modules
          key: v1-root-dependencies-{{ checksum "package-lock.json" }}-{{ checksum "web/package-lock.json" }}-{{ checksum "api/package-lock.json" }}-{{ checksum "shared/package-lock.json" }}-{{ checksum "api/layer/package-lock.json" }}

      - persist_to_workspace:
          root: ./
          paths:
            - ./

  deploy:
    working_directory: ~/tsg
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: ./

      - run:
          name: Deploying API
          command: npm run deploy-api
          environment:
            SENTRY_PROJECT: tsg-api

      - run:
          name: Deployment notification to Rollbar for tsg-api
          command: |
            curl https://api.rollbar.com/api/1/deploy/ \
              -F access_token=$ROLLBAR_API_DEPLOY_TOKEN \
              -F environment=production \
              -F revision=$CIRCLE_SHA1 \
              -F local_username=$CIRCLE_USERNAME

      - run:
          name: Build web bundle and all assets
          command: REACT_APP_VERSION=${CIRCLE_SHA1} npm run build-web

      - run:
          name: Move sourcemaps to their own directory
          command: mkdir sm && mv web/build/static/js/*.map sm/

      - run:
          name: Upload production web bundle to S3 and invalidate CloudFront distribution
          command: npm run deploy-web

      - run:
          name: Deployment notification to Rollbar for tsg-web
          command: |
            curl https://api.rollbar.com/api/1/deploy/ \
              -F access_token=$ROLLBAR_WEB_DEPLOY_TOKEN \
              -F environment=production \
              -F revision=$CIRCLE_SHA1 \
              -F local_username=$CIRCLE_USERNAME

      - run:
          name: Move JS files to the sourcemap directory
          command: mv web/build/static/js/*.js sm/

      - run:
          name: Upload Rollbar sourcemaps
          command: |
            cd sm
            find **.js | while read file
            do
              curl https://api.rollbar.com/api/1/sourcemap/ \
                -F access_token=$ROLLBAR_WEB_DEPLOY_TOKEN \
                -F version=$CIRCLE_SHA1 \
                -F minified_url=https://tsg.hmm.dev/static/js/$file \
                -F source_map=@"${file}.map"
            done

workflows:
  version: 2
  tsg:
    jobs:
      - test:
          context: maingot

      - deploy:
          context: maingot
          requires:
            - test
          filters:
            branches:
              only: master
